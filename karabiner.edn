{   :profiles {:Default {;; "default true means" rules default goes into this rule if no profiles specified
                      :default true
                      ;; simlayer is implemented with to_if_alone and simultaneous key press feature
                      :sim     50
                      ;; to_delayed_action_delay_milliseconds
                      :delay   500
                      ;; affects to_if_alone behavior
                      :alone   1000
                      ;; to_if_held_down_threshold_milliseconds
                      :held    500}} 

    ;; Para saber el bundle ID de cada app
    ;;   mdls -name kMDItemCFBundleIdentifier /Applications/Postman.app
    :applications {
                :safari     ["^com\\.apple\\.Safari$"]
                :chrome     ["^com\\.google\\.Chrome$"]
                :finder     ["^com\\.apple\\.finder$"]
                :obsidian   ["^md\\.obsidian$"]
                :notion     ["^notion\\.id$"]
                :music      ["^com\\.apple\\.Music"]
                :code       ["^com\\.visualstudio\\.code\\.oss$"
                             "^com\\.microsoft\\.VSCode(Insiders)?$"
                             "^com\\.microsoft\\.VSCode?$"
                             "com\\.exafunction\\.windsurf"
                             ]
                :terminals  ["^com\\.apple\\.Terminal$"
                             "^com\\.googlecode\\.iterm2$"]
                :warp       ["^dev\\.warp\\.Warp-Stable$"]

                :mail       ["^com\\.apple\\.mail$"]
                :notes      ["^com\\.apple\\.Notes$"]
                :calendar   ["^com\\.apple\\.iCal$"]
                :preview1   ["^com\\.apple\\.Preview$" :previewsidebar]
                :preview0   ["^com\\.apple\\.Preview$" :!previewsidebar]
                :terminal   ["^com\\.apple\\.Terminal$"]
                :chatgpt   ["^com\\.openai\\.ChatGPT$"]
                :postman   ["^com\\.postmanlabs\\.mac$"]
                :intellij   ["^com\\.jetbrains.intellij\\.ce$"]
                :anki   ["^net\\.ankiweb\\.dtop"]
                :windowsapp   ["^com\\.microsoft\\.rdc\\.macos$"]
                }


    :templates {:yabai "/opt/homebrew/bin/yabai -m %s"
                :launch-app "open -a '%s'"
                :open "open -n '/Applications/%s.app'"}

    :devices {:g305-device [{:vendor_id 1133 :product_id 50495}]}

    :layers {
                :hyper-mode {:key :caps_lock :alone {:key :return_or_enter}}
                :mouse-mode1 {:key :keypad_1 :condi :g305-device :alone {:key :!Cc}}
                :mouse-mode2 {:key :keypad_2 :condi :g305-device :alone {:key :!Cv}}
                :mouse-mode3 {:key :keypad_3 :condi :g305-device}
                :mouse-mode4 {:key :keypad_4 :condi :g305-device :alone {:key :!Tup_arrow}}
            }
    :simlayers {
             :launch-mode {:key :slash}
             :tmux-winmove-mode {:key :q :condi :Terminals}
             :period-mode {:key :period}
             :comma-mode {:key :comma} 
             :z-mode {:key :z} 
             :x-mode {:key :x} 
             }
    :main [

            {:des, "Yabai keybinds", :rules[
                ;;====NAVIGATION====

                ;;Focus Spaces

                ;; SIP Activated
                ;; [:!E#Pz [:!Ez [:yabai "display --focus 1"]]]
                ;; [:!E#Px [:!Ex [:yabai "display --focus 1"]]]
                ;; [:!E#Pc [:!Ec [:yabai "display --focus 1"]]]
                ;; [:!E#Pv [:!Ev [:yabai "display --focus 1"]]]

                ;; [:!O#Pm [:!Om [:yabai "display --focus 2"]]]
                ;; [:!O#Pcomma [:!Ocomma [:yabai "display --focus 2"]]]
                ;; [:!O#Pperiod [:!Operiod [:yabai "display --focus 2"]]]
                ;; [:!O#Pslash [:!Oslash [:yabai "display --focus 2"]]]

                ;; [:!E#Pb [:!Eb [:yabai "display --focus 3"]]]
                ;; [:!O#Pn [:!On [:yabai "display --focus 3"]]]
                

                ;; SIP Deactivated
                [:!E#Pz [:yabai "space --focus 5"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!E#Px [:yabai "space --focus 6"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!E#Pc [:yabai "space --focus 7"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!E#Pv [:yabai "space --focus 8"] nil {:afterup [:yabai "window --focus mouse"]}]

                [:!O#Pm [:yabai "space --focus 1 "] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!O#Pcomma [:yabai "space --focus 2"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!O#Pperiod [:yabai "space --focus 3"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!O#Pslash [:yabai "space --focus 4"] nil {:afterup [:yabai "window --focus mouse"]}]

                [:!E#Pb [:yabai "space --focus 9"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!O#Pn [:yabai "space --focus 10"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!O#Pi [:yabai "space --focus 11"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!O#Po [:yabai "space --focus 12"] nil {:afterup [:yabai "window --focus mouse"]}]
                [:!O#Pu [:launch-app "Windows App"]]


                ;;Windows focus
                [:!O#Psemicolon [:yabai "window --focus stack.next"]]
                [:!O#Pj [:yabai "window --focus stack.prev"]]
                [:!O#Pk [:yabai "window --focus west"]]
                [:!O#Pl [:yabai "window --focus east"]]

                [:!O#Pf [:yabai "window --focus stack.recent"]]
                [:!E#Pf [:yabai "window --focus stack.recent"]]


                ;;Focus Displays
                [:!O#Pu [:yabai "display --focus 1"]]
                [:!O#Pi [:yabai "display --focus 2"]]
                [:!O#Po [:yabai "display --focus 3"]]

                ;;==== Modification ====
                ;;Move window relatively
                [:!TO#Psemicolon [:yabai "window --warp south"]]
                [:!TO#Pj  [:yabai "window --warp north"]]
                [:!TO#Pk  [:yabai "window --warp west"]]
                [:!TO#Pl  [:yabai "window --warp east"]]

                [:!FT#Psemicolon [:yabai "window --stack next"]]
                [:!FT#Pj [:yabai "window --stack prev"]]


                ;;Swap windows
                
                [:!SO#Psemicolon  [:yabai "window --swap south"]]
                [:!SO#Pj  [:yabai "window --swap north"]]
                [:!SO#Pk  [:yabai "window --swap west"]]
                
                [:!SO#Pl  [:yabai "window --swap east"]]


                ;;Move window to display left and right

                ;; SIP Activated
                ;; [:!FO#Pu [:yabai "window --display 1"] nil {:afterup [:yabai "display --focus 1"]}]
                ;; [:!FO#Pi [:yabai "window --display 2"] nil {:afterup [:yabai "display --focus 2"]}]
                ;; [:!FO#Po [:yabai "window --display 3"] nil {:afterup [:yabai "display --focus 3"]}]

                ;; SIP Deactivated
                ;;[:!FO#Pu [:yabai "window --display 1"]]
                ;;[:!FO#Pi [:yabai "window --display 2"]]
                ;;[:!FO#Po [:yabai "window --display 3"]]
                
                ;;Send window to space
                [:!FO#Pm [:yabai "window --space 1"]]
                [:!FO#Pcomma [:yabai "window --space 2"]]
                [:!FO#Pperiod [:yabai "window --space 3"]]
                [:!FO#Pslash [:yabai "window --space 4"]] 

                [:!FO#Pz [:yabai "window --space 5"]]
                [:!FO#Px [:yabai "window --space 6"]]
                [:!FO#Pc [:yabai "window --space 7"]]
                [:!FO#Pv [:yabai "window --space 8"]]


                [:!FO#Pb [:yabai "window --space 9"]]
                [:!FO#Pn [:yabai "window --space 10"]]
                [:!FO#Pi [:yabai "window --space 11"]]
                [:!FO#Po [:yabai "window --space 12"]]


                ;; Scratchpad
                ;;[:!F#Ph [:yabai "window --scratchpad"]]
                [:!F#Pr [:yabai "window --toggle redis"]]
                [:!F#Pf [:yabai "window --toggle finder"]]
                [:!F#Pw [:yabai "window --toggle musica"]]
                [:!F#Pq [:yabai "window --toggle whatsapp"]]
                [:!FC#Pq [:yabai "window --toggle slack"]]
                [:!F#Pg [:yabai "window --toggle gather"]]
                [:!F#Pd [:yabai "window --toggle warp"]]
                [:!F#Pc [:yabai "window --toggle gpt"]]
                [:!F#Pe [:yabai "window --toggle mail"]]
                [:!F#Pa [:yabai "window --toggle anki"]]
                ;;[[{:pkey :button6} {:pkey :button4}] [:yabai "window --toggle anki"]]
                [:!F#Pv [:yabai "window --toggle obsidian"]]
                
                [:!F#Ps [:yabai "window --toggle sticky"]]
                [:!F#Px [:yabai "window --toggle pip"]]


                [:!F#Pz [:yabai "window --raise"]]
                [:!F#Px [:yabai "window --minimize"]]

                

                ;;Set insertion point in focused cotainer
                [:!E#Pw [:yabai "window --insert south"]]
                [:!E#Pq [:yabai "window --insert east"]]
                [:!E#Ps [:yabai "window --insert stack"]]
                [:!E#Pe [:yabai "window --toggle split"]]



                ;;Equalize size of windows
                [:!FC#Pe [:yabai "space --balance"]]
                [:!FC#Px [:yabai "space --equalize x-axis"]]
                [:!FC#Py [:yabai "space --equalize y-axis"]]


                ;;Rotate Windows
                [:!FO#Pr [:yabai "space --rotate 270"]] 
                [:!FO#Px [:yabai "space --mirror x-axis"]]
                [:!FO#Py [:yabai "space --mirror y-axis"]]

                ;;Toggle window flow
                [:!FO#Pspacebar [:yabai "window --toggle float --grid 11:11:1:1:7:7"]]

                ;;Toggle window fullscreen, zoom
                [:!T#Pf [:yabai "window --toggle zoom-parent"]]
                [:!O#Pa [:yabai "window --toggle zoom-fullscreen"]]
                [:!E#Pa [:yabai "window --toggle zoom-fullscreen"]]


                ;;tart/stop yabai
                [:!TOC#Pp "/opt/homebrew/bin/yabai --stop-service"]
                [:!TOC#Ps "/opt/homebrew/bin/yabai --start-service"]
                [:!TOC#Pr "/opt/homebrew/bin/yabai --restart-service"]

                ;;Resize window
                ;; [:!T#Pk [:yabai "window --resize right:-50:0 2> /dev/null || /opt/homebrew/bin/yabai window --resize left:-50:0 2> /dev/null"]]
                ;; [:!T#Psemicolon [:yabai "window --resize bottom:0:50 2> /dev/null || /opt/homebrew/bin/yabai window --resize top:0:50 2> /dev/"]]
                ;; [:!T#Pj [:yabai "window --resize bottom:0:-50 2> /dev/null|| /opt/homebrew/bin/yabai window --resize top:0:-50 2> /dev/null"]]
                ;; [:!T#Pl [:yabai "window --resize right:50:0 2> /dev/null|| /opt/homebrew/bin/yabai window --resize left:50:0 2> /dev/null"]]

                [:!FC#Pm [:yabai "window --resize bottom:0:-100 2> /dev/null|| /opt/homebrew/bin/yabai window --resize top:0:-100 2> /dev/null"]]
                [:!FC#Pcomma [:yabai "window --resize right:-100:0 2> /dev/null || /opt/homebrew/bin/yabai window --resize left:-100:0 2> /dev/null"]]
                [:!FC#Pperiod [:yabai "window --resize right:100:0 2> /dev/null|| /opt/homebrew/bin/yabai window --resize left:100:0 2> /dev/null"]]
                [:!FC#Pslash [:yabai "window --resize bottom:0:100 2> /dev/null || /opt/homebrew/bin/yabai window --resize top:0:100 2> /dev/"]]

                ;;Move window
                [:!FC#Pu [:yabai "window --move rel:0:-150"]]
                [:!FC#Pi [:yabai "window --move rel:-200:0"]]
                [:!FC#Po [:yabai "window --move rel:200:0"]]
                [:!FC#Pp [:yabai "window --move rel:0:150"]]

            ]}
            ; Q  | right_command

            ; W  | right_control
            ; E  | right_option
            ; R  | right_shift
            ; P  | caps_lock
            {:des "Command to option, option to Command" :rules[
                ;;[:##left_command :##left_option]
                ;;[:##left_option :##left_command]
                [:!Cm []]
                [:!Ch []]
            ]}
            ;; :condi for multiple conditions
            {:des "Mouse navigation" :rules[
                ;;[:condi :g305-device :f1-mode :z-mode] for multiple conditions use :condi as the first element
                [:v [:yabai "space --focus 4 "] :mouse-mode1 {:afterup [:yabai "window --focus mouse"]}]
                [:c [:yabai "space --focus 3 "] :mouse-mode1 {:afterup [:yabai "window --focus mouse"]}]
                [:x [:yabai "space --focus 2 "] :mouse-mode1 {:afterup [:yabai "window --focus mouse"]}]
                [:z [:yabai "space --focus 1 "] :mouse-mode1 {:afterup [:yabai "window --focus mouse"]}]

                [:!Sv [:yabai "window --space 4"] :mouse-mode1]
                [:!Sc [:yabai "window --space 3"] :mouse-mode1]
                [:!Sx [:yabai "window --space 2"] :mouse-mode1]
                [:!Sz [:yabai "window --space 1"] :mouse-mode1]


                [:v [:yabai "space --focus 8 "] :mouse-mode2 {:afterup [:yabai "window --focus mouse"]}]
                [:c [:yabai "space --focus 7 "] :mouse-mode2 {:afterup [:yabai "window --focus mouse"]}]
                [:x [:yabai "space --focus 6 "] :mouse-mode2 {:afterup [:yabai "window --focus mouse"]}]
                [:z [:yabai "space --focus 5 "] :mouse-mode2 {:afterup [:yabai "window --focus mouse"]}]

                [:!Sv [:yabai "window --space 8"] :mouse-mode2]
                [:!Sc [:yabai "window --space 7"] :mouse-mode2]
                [:!Sx [:yabai "window --space 6"] :mouse-mode2]
                [:!Sz [:yabai "window --space 5"] :mouse-mode2]


                [:b [:yabai "space --focus 10 "] :mouse-mode1 {:afterup [:yabai "window --focus mouse"]}]
                [:!Sb [:yabai "window --space 10"] :mouse-mode1]
                [:w [:yabai "space --focus 11 "] :mouse-mode1 {:afterup [:yabai "window --focus mouse"]}]
                [:!Sw [:yabai "window --space 11"] :mouse-mode1]
                [:e [:yabai "space --focus 12 "] :mouse-mode1 {:afterup [:yabai "window --focus mouse"]}]

                [:r [:launch-app "Windows App"] :mouse-mode1]

                [:s [:yabai "window --focus west"] :mouse-mode1]
                [:d [:yabai "window --focus east"] :mouse-mode1]
                [:f [:yabai "window --focus stack.recent"] :mouse-mode1]
                [:a [:yabai "window --toggle zoom-fullscreen"] :mouse-mode1]
                ;; NAVIGATION TABS
                [:w :!SCopen_bracket :mouse-mode2]
                [:e :!SCclose_bracket :mouse-mode2]
                [:q :!Tu [:code :mouse-mode2]]
                [:r :!CTOp [:code :mouse-mode2]]
            ]}

            {:des "Toggle caps_lock by pressing left_shift then right_shift" :rules[
               [:!S#Pright_shift :caps_lock]
               [:!R#Pleft_shift :caps_lock]
            ]}
            {:des "Capslock to Hyper, Return if alone" :rules[
                 [:##caps_lock :fn nil {:alone :return_or_enter}]
            ]}
            {:des "Function to ESQ" :rules[
                 [:fn :escape nil {:held :fn :params{:held 100}}]
            ]}
            {:des "Shift deletes Forward and Backward" :rules[
                [:#Pright_shift :right_shift  nil {:alone :!OFdelete_or_backspace}]
                [:#Pleft_shift :left_shift  nil {:alone :!Odelete_or_backspace}]
            ]}
            {:des "Media control" :rules[
                [:!F#Pm :play_or_pause]
                [:!F#Pcomma :rewind]
                [:!F#Pperiod :fast_forward]
            ]}
            {:des "Volume control" :rules[
                :z-mode
                [:comma :volume_decrement]
                [:period :volume_increment]
            ]}
            {:des "Brightness control" :rules[
                :x-mode
                [:comma :display_brightness_decrement]
                [:period :display_brightness_increment]
            ]}
            {:des "Directional Keys" :rules[
                 [:!F##j :up_arrow]
                 [:!F##k :left_arrow]
                 [:!F##l :right_arrow]
                 [:!F##semicolon :down_arrow]
            ]}
        
            {:des "Navigation Tabs" :rules[
                 [:!F#Pi :!SCopen_bracket]
                 [:!F#Po :!SCclose_bracket]
            ]}
            {:des "Scroll control" :rules[
                
                 [:!F#CP9 {:mkey {:vwheel 30 :speed 2}}]
                 [:!F#CP8 {:mkey {:vwheel -30 :speed 2}}]
                ;;  [:!O#CP9 {:mkey {:hwheel -20 :speed 2}}]
                ;;  [:!O#CP8 {:mkey {:hwheel 20 :speed 2}}]
            ]}


            ;; ===== APPS =====
            {:des "Next, Prev Cursor VsCode" :rules[
                :code
                [:!F#Pu :!Tu]
                [:!F#Pp :!CTOp]
                [:!F#Ph :!Ttab]
            ]}
            {:des "Anki controls" :rules[
                :anki
                 [[{:pkey :button6} {:pkey :button1}] :!Cz]
                 [[{:pkey :button4} {:pkey :button1}] :!SCz]
                 [[{:pkey :button6} {:pkey :button2}] :i]
                 [[{:pkey :button4} {:pkey :button2}] :t]
                 [{:pkey :button3} :escape]
                 [{:pkey :button6} [:return_or_enter]]
                 [{:pkey :button4} :j]
                 [[{:pkey :button1} {:pkey :button2}] [{:pkey :button1} {:pkey :button1} {:pkey :button1} :!CTOt]]
                 [{:pkey :button13} [{:pkey :button1} {:pkey :button1} :!CTOt]]
                 [:semicolon :return_or_enter]
                 [:comma :!Cz]
                 [:period :!SCz]
            ]}
            {:des "Next, Prev Cursor intellij" :rules[
                [:!F#Pu :!Thyphen :intellij]
                [:!F#Pp :!SThyphen :intellij]
            ]}
            {:des "ShortCat" :rules[
                 [:!F#Pn :!COTspacebar]
            ]}
            ;; {:des "Pika" :rules[
            ;;      [:!F#Pc :!Op]
            ;; ]}
            {:des "DeepL" :rules[
                 ;[:!F#Pt :!CTOt nil {:delayed {:invoked [:!Ctab :fn] :canceled []} :params {:delay 200}}]
                 [:!F#Pt :!CTOt]
                 [{:pkey :button13} [{:pkey :button1} {:pkey :button1} :!CTOt]]
            ]}
            ;; {:des "Mouse Pinter control" :rules[
            ;;      [:!F#Pw  {:mkey {:y -1536 :speed 1.0}}]
            ;;      [:!F#Ps {:mkey {:y 1536 :speed 1.0}}]
            ;;      [:!F#Pa {:mkey {:x -1536 :speed 1.0}}]
            ;;      [:!F#Pd {:mkey {:x 1536 :speed 1.0}}]
            ;;     ;;  [:!F#Pspacebar {:pkey :button1}]
                
            ;; ]}
            {:des "Opening Apps" :rules[
                
                [[:p :g] [:launch-app "pgAdmin 4"] nil {:params {:held 100 :sim 30}}]
                [[:s :p] [:launch-app "System Preferences"] nil {:params {:held 100 :sim 30}}]
                [[:w :p] [:launch-app "WhatsApp"] nil {:params {:held 100 :sim 30}}]
                [[:n :i] [:launch-app "Notion"] nil {:params {:held 100 :sim 30}}]
                [[:o :b] [:launch-app "Obsidian"] nil {:params {:held 100 :sim 30}}]
                [[:m :s] [:launch-app "music"] nil {:params {:held 100 :sim 30}}]
                [[:p :m] [:launch-app "postman"] nil {:params {:held 100 :sim 30}}]
                [[:c :g] [:launch-app "chatgpt"] nil {:params {:held 100 :sim 30}}]
                [[:t :m] [:launch-app "warp"] nil {:params {:held 100 :sim 30}}]
                [[:c :l] [:launch-app "KeyboardCleanTool"] nil {:params {:held 100 :sim 30}}]
                [[:v :s] [:open "Visual Studio Code"] nil {:params {:held 100 :sim 30}}]
                [[:i :n] [:open "IntelliJ IDEA CE"] nil {:params {:held 100 :sim 30}}]
                [[:c :r] [:open "Google Chrome"] nil {:params {:held 100 :sim 30}}]
                [[:s :f] [:open "Safari"] nil {:params {:held 100 :sim 30}}]
                ;;[[:t :m] [] nil {:held "open -a iTerm --new" :params {:held 100 :sim 30}}]
                [[:f :d] [] nil {:held "open ~" :params {:held 100 :sim 30}}]
                [[:d :l] [] nil {:held "open ~/Downloads" :params {:held 100 :sim 30}}]
                [[:d :s] [] nil {:held "open ~/Desktop" :params {:held 100 :sim 30}}]
                [[:a :p] [] nil {:held "open /Applications" :params {:held 100 :sim 30}}]
            ]}
            
            {:des "Comma Mode [,] as Trigger Key" :rules[
                :comma-mode
                 [:a :open_bracket]
                 [:s :close_bracket]
                 [:d :!S7]
                 [:f :!S8]
                 [:q :!Shyphen]
                 [:w :!Sequal_sign]
                 [:e :!S5]
                 [:r :!S6]]}
             {:des "Period Mode [.] as Trigger Key" :rules[
                :period-mode
                 [:comma ["period-comma-mode" 1] nil {:alone :comma :afterup ["period-comma-mode" 0]}]
                 [:a [:!Sgrave_accent_and_tilde :slash]]
                 [:s [:period :!S8]]
                 [:d :!S9]
                 [:f :!S0]
                 [:q :hyphen]
                 [:w :equal_sign]
                 [:e :!Sopen_bracket]
                 [:r :!Sclose_bracket]]}
            {:des "HYPER: Hyper+B = Universal sidebar toggle" :rules[
                
            ; Show sidebar
                    [:!F#Pb  [:!C#Pbackslash]  :postman]
                    [:!F#Pb  [:!OCs]  :notes]
                    [:!F#Pb  [:!SCl]  :safari]
                    [:!F#Pb  [:!COb]  :chrome]          ; shows bookmark manager
                    [:!F#Pb  [:!CTb]  :nova] 
                    [:!F#Pb  [:!Cb]   :code]
                    [:!F#Pb  [:!Cb]   :windsurf]
                    [:!F#Pb  [:!CTs]  :finder]
                    [:!F#Pb  [:!Cbackslash]  :notion]
                    [:!F#Pb  [:!SCl]  :obsidian]
                    [:!F#Pv  [:!CTs]  :obsidian]
                    [:!F#Pb [:!CSp]  :finder]
                    [:!F#Pb  [:!CTs]  :mail]
                    [:!F#Pb  [:!CO2   ["previewsidebar" 0]] :preview1]
                    [:!F#Pb  [:!CO1   ["previewsidebar" 1]] :preview0]
                    [:!F#Pb  [:!CSbackslash] :terminal] ; no sidebar so tab overview
                    [:!F#Pb  [:!CTs]]]}                   ; default cmd-ctrl-s to show/hide
                                                        ; sidebar in other apps.
                                                        ; might be better to remove this?
         
    ]
}
;;          ===GokuRakuJoudo Official===
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/resources/configurations/edn/example.edn
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/src/karabiner_configurator/keys_info.clj

;;          ===Other Good Examples===
; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/in-the-wild.md
; https://github.com/morberg/dotfiles/blob/main/karabiner.edn
; https://github.com/tIsGoud/goku
; https://github.com/kchen0x/k-goku (alternate, cleaner? approach to hyper)
; https://github.com/
;   emilbryggare/dotfiles/blob/main/.config/karabiner.edn (int use of aliases)
;   nikitavoloboev/dotfiles/blob/master/karabiner/karabiner.edn
;   johnlindquist/dotfiles/blob/master/karabiner/karabiner-starter.edn
;   vheon/home/blob/master/roles/karabiner/files/karabiner.edn
; https://github.com/tIsGoud/goku/blob/master/karabiner.edn (good comments)
; https://github.com/nanoxd/dotfiles/blob/main/config/karabiner.edn (hyper)
; https://github.com/loudoguno/goku/blob/master/karabiner.edn (v. complex)
; https://gist.github.com/gsinclair/f4ab34da53034374eb6164698a0a8ace (simlayer)




;; <other options> section
;; to_if_alone                                    | :alone
;; to_if_held_down                                | :held
;; to_after_key_up                                | :afterup
;; to_delayed_action                              | :delayed
;;   to_if_canceled                               |   :canceled
;;   to_if_invoked                                |   :invoked
;; parameters                                     | :params
;;   basic.to_if_alone_timeout_milliseconds       |   :alone
;;   basic.to_if_held_down_threshold_milliseconds |   :held
;;   basic.to_delayed_action_delay_milliseconds   |   :delay
;;   basic.simultaneous_threshold_milliseconds    |   :sim

;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; P  | caps_lock
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any

;; <from> section
;; :a      | normal key or predefined froms
;; :from-a | predefined froms
;; :!Ca    | special modifier key
;; [:a :b] | simultaneous key
;; {...}   | fallback to `froms` definition

;; <to> section
;; :a                        | normal key or predefined tos
;; :to-a                     | predefined tos
;; :!Ca                      | special modifier key
;; "ls"                      | shell command
;; [:a :b]                   | multiple normal key
;; ["vi-mode" 1]             | set variable, second element in vector isn't keyword
;; ["vi-mode" :a]            | shell command then insert a
;; [:launch-template "Mail"] | shell command then insert a
;; ["cd" "ls"]               | multiple shell command
;; [["vi-mode" 1] :a]        | set variable then insert a
;; [{...}]                   | fallback to `tos` definition

;; conflict
;; ["cd" "ls"]
;; set_variable to string or two shell_command
;; two shell_command cd & ls, cd && ls
;; ["cd" "ls"] | multiple shell command
;; [{:set ["variable name" "variable value"]}] | set variable's value to string (fallback to `tos` definition)



   ;; :x {:mouse_key true}
   ;; :y {:mouse_key true}
;;    :any {:modifier true :both true}
;;    :command {:modifier true :both true}
;;    :shift {:modifier true :both true}
;;    :option {:modifier true :both true}
;;    :control {:modifier true :both true}
;;    :caps_lock {:modifier true}
;;    :left_control {:modifier true}
;;    :left_shift {:modifier true}
;;    :left_option {:modifier true}
;;    :left_command {:modifier true}
;;    :right_control {:modifier true}
;;    :right_shift {:modifier true}
;;    :right_option {:modifier true}
;;    :right_command {:modifier true}
;;    :fn {:modifier true}
;;    :return_or_enter {:label "enter" :display true}
;;    :escape {:display true}
;;    :delete_or_backspace {:label "backspace" :display true}
;;    :delete_forward {:label "del" :display true}
;;    :tab {:display true}
;;    :spacebar {:display true}
;;    :hyphen {:label "hyphen (-)" :display true}
;;    :equal_sign {:label "equal_sign (=)" :display true}
;;    :open_bracket {:label "open_bracket [" :display true}
;;    :close_bracket {:label "close_bracket ]" :display true}
;;    :backslash {:label "backslash (\\)" :display true}
;;    :non_us_pound {}
;;    :semicolon {:label "semicolon (;)" :display true}
;;    :quote {:label "quote (')" :display true}
;;    :grave_accent_and_tilde {:label "grave_accent_and_tilde ()" :display true}
;;    :comma {:label "comma (,)" :display true}
;;    :period {:label "period (.)" :display true}
;;    :slash {:label "slash (/)" :display true}